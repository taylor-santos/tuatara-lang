// used_after_move := 123;
// tmp00 := used_after_move;
// tmp01 := used_after_move;

// used_before_init : U64;
// tmp02 := used_before_init;

// tmp03 := not_declared;

// tmp04 : Unknown_type;

// already_defined_val := 123;
// already_defined_val := 456;

// already_defined_type : U64;
// already_defined_type : U64;

// conflicting_value : Foo = 123;

// func := a: U64 => b: U64 => c: U64 -> () => c a;
//
// a := func 1;
// b := a 2;
// c := b (x: U64 => x);
//
// println := (message: U64) => {
//     x := 5;
//     y := 5;
//     message
// };

// super : (U64,)    = (1,);
// sub   : (U64,U64) = (1,2);
//
// func := x: (U64,U64) => 5;
//
// func(5);

one_tup := (1,);

foo := (x:U64, y:U64) => 5;
bar := t:(U64,U64) => 5;

baz := f:(U64,U64)->U64 => ();

first := (x:U64[]) => x[0];

operator 6 (lhs: U64) + (rhs: U64) -> U64 => 123;
operator 6 (lhs: U64) - (rhs: U64) -> U64 => 123;
operator 5 (lhs: U64) * (rhs: U64) -> U64 => 123;
operator 5 (lhs: U64) / (rhs: U64) -> U64 => 123;


a := (x:U64)=>[x];

foo (1, 2);
bar (3, 4);

baz foo;
baz bar;

op := (x: U64) => x + 5;

